name: CI

on:
  push:
    branches: [main]
    tags:
      # Tags for all potential release numbers till 2030.
      - "2[0-9].[0-3]" # 20.0 -> 29.3
      - "2[0-9].[0-3].[0-9]+" # 20.0.0 -> 29.3.[0-9]+
  pull_request:
  schedule:
    - cron: 0 0 * * MON # Run every Monday at 00:00 UTC

env:
  # The "FORCE_COLOR" variable, when set to 1,
  # tells Nox to colorize itself.
  FORCE_COLOR: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  docs:
    name: docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - run: pip install nox
      - run: nox -s docs

  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.filter.outputs.tests }}
      vendoring: ${{ steps.filter.outputs.vendoring }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            vendoring:
              # Anything that's touching "vendored code"
              - "src/pip/_vendor/**"
              - "pyproject.toml"
            tests:
              # Anything that's touching code-related stuff
              - ".github/workflows/ci.yml"
              - "src/**"
              - "tests/**"
        if: github.event_name == 'pull_request'

  tests-unix:
    name: tests / ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest

    if: >-
      needs.determine-changes.outputs.tests == 'true' ||
      github.event_name != 'pull_request'

    strategy:
      fail-fast: true
      matrix:
        os: [Ubuntu]
        python:
          - "3.11"

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Ubuntu dependencies
        if: matrix.os == 'Ubuntu'
        run: sudo apt-get install bzr

      - name: Install MacOS dependencies
        if: matrix.os == 'MacOS'
        run: brew install bzr

      - run: pip install nox 'virtualenv<20' 'setuptools != 60.6.0'

      # Main check
      - name: Run unit tests
        run: >-
          nox -s test-${{ matrix.python }} --
          -m unit
          --verbose --numprocesses auto --showlocals
      - name: Run integration tests
        run: >-
          nox -s test-${{ matrix.python }} --
          -m integration
          --verbose --numprocesses auto --showlocals
          --durations=5

  
